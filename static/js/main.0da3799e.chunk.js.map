{"version":3,"sources":["components/Todo.js","App.js","index.js"],"names":["Todo","_useState","useState","savedTodos","localStorage","getItem","JSON","parse","_useState2","Object","slicedToArray","ToDos","setToDos","useEffect","setItem","stringify","_useState3","_useState4","ToDo","setToDo","day","Date","getDay","react_default","a","createElement","className","value","onChange","e","target","type","placeholder","onClick","concat","toConsumableArray","id","now","text","status","map","obj","index","name","filter","obj2","checked","key","newToDos","splice","handleRemoveItem","App","Todo_Todo","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0da3799e.chunk.js","sourcesContent":["import React, { useState , useEffect} from \"react\";\r\nimport \"./Todo.css\";\r\n\r\n// localStorage implementation\r\n\r\nexport default function Todo() {\r\n  const [ToDos, setToDos] = useState(() => {\r\n    // get the todos from localstorage\r\n    const savedTodos = localStorage.getItem(\"todos\");\r\n    // if there are todos stored\r\n    if (savedTodos) {\r\n      // return the parsed the JSON object back to a javascript object\r\n      return JSON.parse(savedTodos);\r\n      // otherwise\r\n    } else {\r\n      // return an empty array\r\n      return [];\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    \r\n    localStorage.setItem(\"todos\", JSON.stringify(ToDos));\r\n    \r\n  }, [ToDos]);\r\n  \r\n  const [ToDo, setToDo] = useState(\"\");\r\n  const handleRemoveItem = (key) => {\r\n    const newToDos = [...ToDos];\r\n    newToDos.splice(key, 1);\r\n    setToDos(newToDos);\r\n  };\r\n\r\n  //  Display day in h1\r\n\r\n  const weekday = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const d = new Date();\r\n  let day = weekday[d.getDay()];\r\n\r\n  const displayToDo = () => {\r\n    if(ToDo){\r\n      setToDos([...ToDos, { id: Date.now(), text: ToDo, status: false }]);\r\n      setToDo(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"mainHeading\">\r\n        <h1>ToDo List &nbsp;<i className=\"fa-solid fa-clipboard-list\"></i></h1>\r\n      </div>\r\n      <div className=\"subHeading\">\r\n        <br />\r\n        <h2>Whoop, It's {day} üåù ‚òï </h2>\r\n      </div>\r\n      <div className=\"input\">\r\n        <input\r\n          value={ToDo}\r\n          onChange={(e) => setToDo(e.target.value)}\r\n          type=\"text\"\r\n          placeholder=\"üñäÔ∏è Add item...\"\r\n        />\r\n        <i className=\"fas fa-plus\" onClick={() => displayToDo()}></i>\r\n      </div>\r\n      <div className=\"todos\">\r\n        {ToDos.map((obj, index) => {\r\n          return (\r\n            <div className=\"todo\">\r\n              <div className=\"left\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"\"\r\n                  id=\"\"\r\n                  onChange={(e) => {\r\n                    setToDos(\r\n                      ToDos.filter((obj2) => {\r\n                        if (obj2.id === obj.id) {\r\n                          obj2.status = e.target.checked;\r\n                        }\r\n                        return obj2;\r\n                      })\r\n                    );\r\n                  }}\r\n                  value={obj.status}\r\n                />\r\n                <p className={obj.status ? \"strike\" : \"\"}>{obj.text}</p>\r\n              </div>\r\n              <div className=\"right\">\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  onClick={() => handleRemoveItem(index)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"task-display\">\r\n          <table>\r\n            <tbody>\r\n              <tr>              \r\n                <th className=\"progress\">Progress</th>\r\n                <th className=\"completed\">Completed</th>\r\n              </tr>\r\n              {ToDos.map((obj) => {\r\n                if (obj.status) {\r\n                  return (\r\n                    <tr>\r\n                      <td></td>\r\n                      <td className=\"completed\">{obj.text}</td>\r\n                    </tr>\r\n                  );\r\n                }else{\r\n                  return(\r\n                  <tr>\r\n                    <td className=\"progress\">{obj.text}</td>\r\n                    <td></td>\r\n                  </tr>\r\n                  );\r\n                }\r\n                })\r\n              }\r\n\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport React  from 'react';\nimport Todo from './components/Todo';\n  \nconst App=()=><Todo/>\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}